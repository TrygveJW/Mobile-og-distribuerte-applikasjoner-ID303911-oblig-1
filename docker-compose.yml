version: '3.8'

x-DbLoggin:
  environment:
    &db-login
    SQLURL: "jdbc:postgresql://${MASTER_IP}:5432/fant"
    POSGRESS_USER: "postgres"
    POSTGRES_DB: "fant"
    POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"





services:
  postgres_db:
    image: postgres
    container_name: postgres_db



    environment:
      << :  *db-login
#      PGDATA: "/var/lib/postgresql/data/pgdata"


#    volumes:
#      - type: volume
#        source: db_data
#        target: /var/lib/postgresql/data
#      - type: bind
#        source: ./docker_files/posgress/db_init_scripts
#        target: /docker-entrypoint-initdb.d

    networks:
      db_network:

    ports:
      - "${MASTER_IP}:5432:5432"


    restart: unless-stopped


  api_server:
    container_name: api_server

    build:
      context: ./
      dockerfile: ./Dockerfile

    environment:
      << :  *db-login


    volumes:
      - type: bind
        source: ./target/fant_api-1.0-SNAPSHOT.war
        target: /runvol



    networks:
      db_network:
      frontend:

    depends_on:
      - postgres_db

    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host

    restart: unless-stopped



  # https://github.com/mikael2/payara-postgres-nginx/
#  nginx:
#    container_name: nginx
#
#    build:
#      context: ./DockerFiles/nginx_certbot
#      dockerfile: Dockerfile
#
#    volumes:
#      - type: volume
#        source: nginx_data
#        target: /etc/letsencrypt
#
#    env_file:
#      - ./config_files/nginx_cerbot.env
#
#    environment:
#      DOMAIN: "${API_DOMAIN}"
#      LE_EMAIL: "${MAIL_USERNAME}"
#    logging:
#      options:
#        max-size: "50m"
#        max-file: "3"
#
#    ports:
#      - "80:80"
#      - "443:443"
#
#    networks:
#      frontend:
#
#    depends_on:
#      - api_server
#
#    restart: unless-stopped


networks:
  db_network:
  frontend:
  backend:
  ticketNetwork:
    external: true


volumes:
  db_data:
  nginx_data: