version: '3.8'

x-DbLoggin:
  environment:
    &db-login
    # the posgress user master password
    POSTGRES_PASSWORD: "password"

    USER_USERNAME: "fant"
    USER_DB_NAME: "fant"
    USER_PASSWORD: "fant"

  networks:
    &postgres-ip
    ipv4_address: "10.20.30.40"


x-CertbotConf:
  environment:
    &certbot-conf
    DOMAIN: "localhost"
    LE_EMAIL: "  "


services:
  postgres_db:
    image: postgres


    environment:
      << : *db-login
      PGDATA: "/var/lib/postgresql/data/pgdata"
      AVAL: "abcd"

    networks:
      local_network: *postgres-ip


    ports:
      - "5432:5432"

    volumes:
      - type: volume
        source: postgres_db
        target: /var/lib/postgresql/data

      - type: bind
        source: ./docker_files/db_init
        target: /docker-entrypoint-initdb.d



    restart: unless-stopped


  mail:
    image: namshi/smtp

    networks:
      frontend:


  api_server:

    build:
      context: ./
      dockerfile: ./Dockerfile

    volumes:
      - type: volume
        source: fant_images
        target: /fant_images

    environment:
      PAYARA_ARGS: "--debug"

    networks:
      local_network:
      frontend:



#    ports:
#      - "8080:8080"
#      - "4848:4848"
#      - "8181:8181"
#      - "9009:9009"

    restart: unless-stopped



  # https://github.com/mikael2/payara-postgres-nginx/
  nginx:
    container_name: nginx

    build:
      context: ./docker_files/nginx_certbot
      dockerfile: Dockerfile

    volumes:
      - type: volume
        source: nginx_data
        target: /etc/letsencrypt

    env_file:
      - ./config_files/nginx_cerbot.env

    environment:
      << : *
      DOMAIN: "${API_DOMAIN}"
      LE_EMAIL: "${MAIL_USERNAME}"
    logging:
      options:
        max-size: "50m"
        max-file: "3"

    ports:
      - "80:80"
      - "443:443"

    networks:
      frontend:
      local_network:

    depends_on:
      - api_server

    restart: unless-stopped


networks:
  local_network:
    external: false
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/8


  frontend:

volumes:
  db_data:
  fant_images:
  nginx_data: